{"ast":null,"code":"var _jsxFileName = \"/home/nada/TechTrainee/frontend/src/component/company/CardEditPost.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport img from '../../static/company.png';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CardEditPost() {\n  _s();\n  let [header, setHeader] = useState('Internship Front End Developer');\n  let [type, setType] = useState('Remote');\n  let [txt, setTxt] = useState('We are offering a training opportunity for (3) \\n students on react and react native \\n About training: \\n you are going to learn react and react nativeand how to code it using functions and hooks and you will take pre course for designing \\n Qualifications: \\n -know html and css \\n -know js ');\n  let handleChangeHeader = event => setHeader(event.target.value);\n  let handleChangeType = event => setType(event.target.value);\n  let handleChangeTxt = event => setTxt(event.target.value);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card2 gray-bk centered-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"std-post-detail\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"header\",\n            className: \"std-data std-company-profile bold\",\n            value: header,\n            onChange: handleChangeHeader\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"std-post-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"std-company-profile\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: img,\n              className: \"company-img2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Coders\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"type\",\n                className: \"std-data \",\n                value: type,\n                onChange: handleChangeType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"std-post-txt\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"txt\",\n              className: \"comp-data\",\n              value: txt,\n              onChange: handleChangeTxt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"std-apply-btn\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button-size-std navy-bk white-font\",\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(CardEditPost, \"VIEshfS1q4EUicQuFZNWJAZ7+DQ=\");\n_c = CardEditPost;\nexport default CardEditPost;\nvar _c;\n$RefreshReg$(_c, \"CardEditPost\");","map":{"version":3,"names":["React","img","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","CardEditPost","_s","header","setHeader","type","setType","txt","setTxt","handleChangeHeader","event","target","value","handleChangeType","handleChangeTxt","children","className","name","onChange","fileName","_jsxFileName","lineNumber","columnNumber","src","_c","$RefreshReg$"],"sources":["/home/nada/TechTrainee/frontend/src/component/company/CardEditPost.js"],"sourcesContent":["import React from 'react'\nimport img from '../../static/company.png'\nimport { useState } from 'react'\n\nfunction CardEditPost() {\n    let [header, setHeader]=useState('Internship Front End Developer')\n    let [type, setType]=useState('Remote') \n    let [txt, setTxt]=useState('We are offering a training opportunity for (3) \\n students on react and react native \\n About training: \\n you are going to learn react and react nativeand how to code it using functions and hooks and you will take pre course for designing \\n Qualifications: \\n -know html and css \\n -know js ')       \n    let handleChangeHeader = (event) => \n          setHeader(event.target.value);\n          let handleChangeType = (event) => \n          setType(event.target.value);\n          let handleChangeTxt = (event) => \n          setTxt(event.target.value);\n  return (\n    <>\n        <div className='card2 gray-bk centered-card'>\n          <div className='std-post-detail' >\n\n            <div>\n                <input type='text' name='header' className='std-data std-company-profile bold'\n                    value={header} \n                    onChange={handleChangeHeader}/>\n            </div>\n\n              <div className='std-post-container'>\n                <div className='std-company-profile'>\n                  <img src={img} className='company-img2' />\n                  <span>Coders</span>\n                  \n                  <div>\n                    <input type='text' name='type' className='std-data '\n                    value={type} \n                    onChange={handleChangeType}/>\n                  </div>\n\n                </div>\n\n                <div className='std-post-txt'>\n                    <textarea name='txt' className='comp-data' \n                    value={txt}\n                    onChange={handleChangeTxt}/>\n                </div>\n\n              </div>\n\n                <div className='std-apply-btn'>\n                     <button className='button-size-std navy-bk white-font'>\n                        Done\n                      </button>\n                </div>\n\n            </div>\n            </div>\n    </>\n  )\n}\n\nexport default CardEditPost"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}